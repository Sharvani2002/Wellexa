# -*- coding: utf-8 -*-
"""Notif_rem.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13kCwxKEYp_ce9ZM6Mg2Mznr5f2n8TcpC
"""

import getpass
import os
import schedule
import time
import pyttsx3
import random

def text_to_speech(text, gender):
    voice_dict = {'Male': 0, 'Female': 1}
    code = voice_dict[gender]

    engine = pyttsx3.init()

    # Setting up voice rate
    engine.setProperty('rate', 125)

    # Setting up volume level  between 0 and 1
    engine.setProperty('volume', 0.8)

    # Change voices: 0 for male and 1 for female
    voices = engine.getProperty('voices')
    engine.setProperty('voice', voices[code].id)

    engine.say(text)
    engine.runAndWait()

def water_notification():
	message=["Drink enough water to keep fit and healthy","Time to quench your thirst","Staying hydrated is a daily necessity, no matter what the thermometer says","get yourself a glass of water"]
	gender=["Male","Female"]
	text_to_speech(random.choice(message),random.choice(gender))

def take_medication():
	message="Time to take your medicine"
	gender=["Male","Female"]
	text_to_speech(random.choice(message),random.choice(gender))

def wish(): 			# method to wish the user a morning or after noon or night based on time and give the date, day and time .
	current_time=time.localtime()
	if current_time[3] < 12 :
		message=[" Good Morining ","Time to get up. Hope you have a good day"]
		gender=["Male","Female"]
		text_to_speech(random.choice(message),random.choice(gender))
	elif current_time[3] in range(12,18):
		message=[" Good Afternoon","It's lunch time!"]
		gender=["Male","Female"]
		text_to_speech(random.choice(message),random.choice(gender))
	elif current_time[3] in range(18,20):
		message=[" Good Evening ", "Time to return home after the day's work"]
		gender=["Male","Female"]
		text_to_speech(random.choice(message),random.choice(gender))
	else:
		message=[" Good Night","Hope you sleep well"]
		gender=["Male","Female"]
		text_to_speech(random.choice(message),random.choice(gender))

def bedtime():
	message=[" Good Night","Hope you sleep well","Time to go to bed", "Goodnight! Dream well"]
	gender=["Male","Female"]
	text_to_speech(random.choice(message),random.choice(gender))

def take_a_break():
	message=["Need a break? Well, it's time to take one now... You have been busy for quite a while now","Get up and have a look outside your window","Relaxations are necessary to work efficiently","Close your eyes and relax for a while"]
	gender=["Male","Female"]
	text_to_speech(random.choice(message),random.choice(gender))

def greeting():
	message=["Hello! Reminder has been activated","Don't worry! We will help you stay fit and healthy"]
	gender=["Male","Female"]
	text_to_speech(random.choice(message),random.choice(gender))

# import urllib.request
# from flask import Flask, request, redirect, url_for, render_template, send_from_directory,Response
# from werkzeug.utils import secure_filename
# from flask_cors import cross_origin


# app = Flask(__name__, static_url_path="/static")
# app.secret_key = "secret key"
# app.config['MAX_CONTENT_LENGTH'] = 16 * 1024 * 1024

# @app.route('/')
# def index():
#     return render_template('homepage.html')
    
# @app.route('/static/text2speech.html',methods=['GET', 'POST'])
# @cross_origin()
# def index_text2speech():
#     if request.method == 'POST':
#         greeting()
#         time1 = request.form['time1']
#         time2 = request.form['time2']
#         time3 = request.form['time3']
#         time1=int(time1)
#         time2=int(time2)
#         schedule.every(time1).hours.do(water_notification)
#         schedule.every(time2).minutes.do(take_a_break)  
#         schedule.every().day.at("09:00").do(take_medication)
#         schedule.every().day.at("22:00").do(bedtime)
#         schedule.every().day.at("07:00").do(wish)
#         while True:
#         	schedule.run_pending()
#         	time.sleep(1)
#         return render_template('text2speech.html')
#     else:
#         return render_template('text2speech.html')
    
# @app.route('/static/index.html',methods=['GET', 'POST'])
# def index_home():
#        return render_template('index.html')

# @app.route('/static/homepage.html',methods=['GET', 'POST'])
# def mainhome():
#        return render_template('homepage.html')

# if __name__ == '__main__':
#     app.run()